<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.wankun</groupId>
	<artifactId>textsplit</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<name>textsplit</name>
	<url>http://maven.apache.org</url>
	<build>
		<testResources>
			<testResource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*logback*.properties</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<!-- 解决M2eclipse插件引起的Pom.Xml校验错误.导致此错误是m2eclipse插件0.12及之前的版本在Eclipse 内执行了一系列的生命周期引起冲突导致的 -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- 编译插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<debug>true</debug>
				</configuration>
			</plugin>
			<!-- 单元测试插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<additionalClasspathElements>
						<additionalClasspathElement>target/conf</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
			<!-- resource插件, 解决资源文件的编码问题 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 打包插件,增加了测试类的打包，打包包含java和resources两个目录下文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<!-- 这个功能有限，可以配合maven-dependency-plugin插件使用，前者拷贝依赖包到指定目录，这里将指定目录添加为classpath -->
							<addClasspath>true</addClasspath>
							<classpathPrefix>libs/</classpathPrefix>
							<mainClass>com.wankun.textsplit.TestConfig</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- source插件,打包源码 -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
							<goal>test-jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- javadoc插件, 可以生成doc文件和doc jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-javadoc</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<charset>UTF-8</charset>
				</configuration>
			</plugin>
			<!-- 拷贝依赖包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/libs</outputDirectory>
							<!-- <overWriteReleases>false</overWriteReleases> <overWriteSnapshots>false</overWriteSnapshots> 
								<overWriteIfNewer>true</overWriteIfNewer> 这里的选项可以省去，默认会打包所有的依赖库 <includeArtifactIds> ansj_seg,hamcrest-all,junit,logback-classic,logback-core,slf4j-api,guava 
								</includeArtifactIds> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 生成运行文件 插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>manifest</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo file="target/runtextsplit.sh">
									java -Dlogback.configurationFile=conf/logback.xml -jar textsplit-1.0.0.jar com.wankun.textsplit.TestConfig
								</echo>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<properties>
		<!-- property用处：对于本pom中多个相同配置统一管理 ；对于含子项目的pom配置统一管理 -->
		<java.version>1.7</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven-compiler-plugin.version>3.0</maven-compiler-plugin.version>
		<maven-jar-plugin.version>2.5</maven-jar-plugin.version>
		<maven-surefire-plugin.version>2.14</maven-surefire-plugin.version>
		<maven-resources-plugin.version>2.6</maven-resources-plugin.version>
		<maven-source-plugin.version>2.2.1</maven-source-plugin.version>
		<maven-javadoc-plugin.version>2.8.1</maven-javadoc-plugin.version>
		<maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
		<maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
		<ansj_seg.version>1.4.1</ansj_seg.version>
		<hamcrest-all.version>1.3</hamcrest-all.version>
		<junit.version>4.10</junit.version>
		<logback-classic.version>1.1.2</logback-classic.version>
		<guava.version>11.0.2</guava.version>
	</properties>
	<repositories>
		<repository>
			<id>mvn-repo</id>
			<url>http://maven.ansj.org/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.ansj</groupId>
			<artifactId>ansj_seg</artifactId>
			<version>${ansj_seg.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest-all.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-classic.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
	</dependencies>
</project>